---
- name: php repository gpg key (buster only)
  ansible.builtin.apt_key:
    url: 'https://packages.sury.org/php/apt.gpg'
    state: present
  become: true
  when: ansible_distribution_release == 'buster'

- name: php repository (buster only)
  apt_repository:
    repo: 'deb https://packages.sury.org/php/ buster main'
    filename: php7.list
    state: present
  become: true
  when: ansible_distribution_release == 'buster'

- name: install the web stack
  ansible.builtin.package:
    name:
      - nginx
      - php7.4-fpm
      - php7.4-mbstring
      - php7.4-sqlite3
      - composer
    state: present
  become: true

- name: add the current user to www-data group
  ansible.builtin.user:
    name: "{{ ansible_user_id }}"
    groups: www-data
    append: true
  become: true

- name: web directories
  ansible.builtin.file:
    path: "{{ item }}"
    owner: root
    group: www-data
    mode: '0755'
    state: directory
  become: true
  loop:
    - "{{ web_home }}"
    - "{{ web_home }}/Config"

- name: write webpanel config file
  template:
    src: Config.php.j2
    dest: "{{ web_home }}/Config/Config.php"
    owner: root
    group: www-data
    mode: '0644'
  become: true

- name: create the artifact directories
  ansible.builtin.file:
    path: "{{ item }}"
    owner: root
    group: www-data
    mode: '2775'
    state: directory
  become: true
  loop:
    - "{{ audio_output }}"
    - "{{ images_output }}"
    - "{{ images_output }}/thumb"
    - "{{ videos_output }}"

- name: update database folder permissions
  ansible.builtin.file:
    path: "{{ noaa_home }}/db"
    owner: "{{ ansible_user_id }}"
    group: www-data
    mode: '2775'
  become: true

- name: check if self-signed certificate is expired
  command:
    argv:
      - openssl
      - x509
      - -checkend
      - 86400
      - -noout
      - -in
      - /etc/ssl/certs/local_server.crt
  failed_when: false
  changed_when: false
  register: cert_valid
  when: enable_tls

- name: create self-signed certificate
  ansible.builtin.command:
    argv:
      - openssl
      - req
      - -x509
      - -nodes
      - -subj
      - "/CN={{ web_server_name }}"
      - -days
      - "{{ cert_valid_days }}"
      - -newkey
      - rsa:4096
      - -sha256
      - -keyout
      - "{{ tls_cert_key }}"
      - -out
      - "{{ tls_cert }}"
  become: true
  when: enable_tls and cert_valid.rc != 0
  notify: restart nginx

- name: nginx site config file
  ansible.builtin.template:
    src: nginx-site.conf.j2
    dest: /etc/nginx/sites-available/default
    owner: root
    group: root
    mode: '0644'
  become: true
  notify: restart nginx

- name: ensure the default nginx site is enabled
  ansible.builtin.file:
    src: ../sites-available/default
    dest: /etc/nginx/sites-enabled/default
    state: link
  become: true
  notify: restart nginx

- name: ensure nginx is enabled and running
  ansible.builtin.service:
    name: nginx
    enabled: true
    state: started
  become: true

- name: www-data sudoers atrm as pi user
  ansible.builtin.copy:
    src: 020_www-data-atrm-nopasswd
    dest: /etc/sudoers.d/020_www-data-atrm-nopasswd
    owner: root
    group: root
    mode: '0440'
  become: true
...
