---
- name: check if meteor_demod is installed
  ansible.builtin.shell:
    cmd: 'command -v meteor_demod'
  failed_when: false
  changed_when: false
  check_mode: false
  register: meteor_demod_bin

- name: make and install meteor_demod
  when:
    - meteor_demod_bin.rc != 0
  block:
    - name: create a temporary directory for build
      ansible.builtin.tempfile:
        state: directory
        suffix: meteor_demod
      register: meteor_demod_tmp

    - name: install necessary tools
      ansible.builtin.package:
        name:
          - build-essential
          - cmake
        state: present
      become: true

    - name: clone the meteor_demod repository
      ansible.builtin.git:
        repo: 'https://github.com/dbdexter-dev/meteor_demod.git'
        dest: "{{ meteor_demod_tmp.path }}"
        update: false

    - name: create the build directory
      ansible.builtin.file:
        path: "{{ meteor_demod_tmp.path }}/build"
        owner: "{{ ansible_user_id }}"
        mode: '0755'
        state: directory

    - name: prepare the build
      ansible.builtin.command:
        argv:
          - cmake
          - -DENABLE_TUI=OFF
          - ..
        chdir: "{{ meteor_demod_tmp.path }}/build"

    - name: compile the code
      ansible.builtin.command:
        argv: ['make']
        chdir: "{{ meteor_demod_tmp.path }}/build"

    - name: install the executable
      ansible.builtin.command:
        argv: ['make', 'install']
        chdir: "{{ meteor_demod_tmp.path }}/build"
      become: true
  always:
    - name: remove the temporary build directory
      ansible.builtin.file:
        path: "{{ meteor_demod_tmp.path }}"
        state: absent

- name: install medet_arm
  copy:
    src: "{{ noaa_home }}/software/medet_arm"
    dest: /usr/local/bin/medet_arm
    owner: root
    group: root
    mode: '0755'
    remote_src: true
  become: true

- name: create the systemd pass schedule service
  ansible.builtin.template:
    src: schedule-passes.service.j2
    dest: /etc/systemd/system/schedule-passes.service
    owner: root
    group: root
    mode: '0644'
  become: true

- name: create the systemd pass schedule timer
  ansible.builtin.copy:
    src: schedule-passes.timer
    dest: /etc/systemd/system/schedule-passes.timer
    owner: root
    group: root
    mode: '0644'
  become: true

- name: enable the pass schedule timer
  ansible.builtin.systemd:
    name: schedule-passes.timer
    enabled: true
  become: true

- name: create the passes database
  ansible.builtin.shell:
    cmd: "/usr/bin/sqlite3 {{ noaa_home | quote }}/db/panel.db < {{ noaa_home | quote }}/db_migrations/00_seed_schema.sql"
    creates: "{{ noaa_home }}/db/panel.db"

- name: create temporary directories
  ansible.builtin.file:
    path: "{{ noaa_home }}/tmp/{{ item }}"
    owner: "{{ ansible_user_id }}"
    mode: '0755'
    state: directory
  loop:
    - annotation
    - map
    - meteor
    - scanner

- name: create output directories
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "{{ ansible_user_id }}"
    mode: '2755'
    state: directory
  become: true
  loop:
    - "{{ audio_output }}"
    - "{{ audio_output }}/noaa"
    - "{{ audio_output }}/meteor"
    - "{{ images_output }}"
    - "{{ images_output }}/thumb"
    - "{{ videos_output }}"
